package com.bilfind;

/**
 * This class holds all location data and a few additional usefull methods
 * @author Masna Ahmed (class), Abdul Basit Anees (method extractString), Asuman Aydın (locate and coordinates)
 * @version 12/5/2017
 */

public class Data {
    static String[] locate = new String[]{"Bilkent Center",
            "Bilkent Otel ve Konferans Merkezi",
            "Bilkent Ankuva Alýþveriþ Merkezi",
            "Bilkent Station",
            "ODEON Gösteri Merkezi",
            "Bilkent Cyberpark",
            "Bilkent Üniversitesi Merkez Kampüs Kütüphanesi",
            "UNAM","Bilkent Üniversitesi Hazýrlýk Okulu",
            "Bilkent Üniversitesi Bilgisayar Tkn. Ve Biliþim Sistemleri",
            "Bilkent Üniversitesi Doðu Kampüs Nizamiyesi 2",
            "Bilkent Üniversitesi Müzik Ve Sahne Sanatlarý Fakültesi Müzik Ve Sahne Sanatlarý Lisesi",
            "Garanti Bilkent Üniversitesi Baðlý Þube",
            "ÝDV Özel Bilkent Ýlk ve Ortaokulu",
            "Ýhsan Doðramacý Vakfý Özel Bilkent Lisesi",
            "Turizm Otelcilk Myo",
            "Bilkent Üniversitesi Giriþ",
            "Akdeniz Mutfaðý",
            "Ptt Bank-yök Þubesi",
            "Yüksek Öðretim Kurulu Baþkanlýðý ",
            "Ösym",
            "Salus Restoran",
            "Sports International",
            "Starbucks- bilkent park sitesi",
            "Jean Monnet",
            "BTG (Bilgi ve Teknoloji Grubu",
            "Bilkent Lojmanlarý",
            "Merkez Lojmanlar Çocuk Parký",
            "BOTAÞ Genel Müdürlüðü A-2 Blok",
            "Ankara 55. Noter",
            "Halkbank",
            "Bilge Adam Bilkent",
            "Ziraat Bankasi",
            "Rekabet Kurumu",
            "T.C.Baþbakanlýk Toplu Konut Ýdaresi Baþkanlýðý",
            "T Emlak Bankasý Ortaokulu",
            "Botaþ",
            "Burger King-Ankara Bilkent Þubesi",
            "Prestige Cinema",
            "Hmbrgr",
            "Starbucks -center",
            "Real Hipermarket",
            "Marks & Spencer",
            "Quick China Bilkent",
            "Bun Design Bilkent Station",
            "Bis Dine and Live",
            "Ateþ Ustasý",
            "Bilkent Go Kart",
            "Subway",
            "Bigchefs Cafe & Brasserýe",
            "Simit Center",
            "Red&White",
            "Midpoint Bilkent Center",
            "Deli Yengeç",
            "Bind Chocolate",
            "Ekstrem Mini Party Store",
            "Niyokki Makarna",
            "Duble Döner",
            "Pizza Il Forno",
            "Otantik Coffee House Restaurant",
            "Keffçe",
            "Cafe Boo",
            "COZINHA",
            "Bis by Newcastle",
            "Kentucky Fried Chicken",
            "Tabanway",
            "Emirgan",
            "Bridgestone BOX",
            "BÝLKENT REHBERÝ",
            "Doðramacýzade Ali Paþa Camii ",
            "Ankara 55. Noter",
            "Tarz Tasarým Mobilya Ve Aksesuarlarý",
            "Bilkent Çiçekcilik",
            "Selina Kuyumcu",
            "Bilkent Net Kýrtasiye",
            "Catwolk Ayakkabýcýlýk",
            "Mezzaluna",
            "Lokal '71",
            "Evo Spor",
            "Roll House Bowling",
            "Bilkent Mutfak",
            "Ankuva Bilkent Terzi",
            "Ankuva Alýþveriþ Merkezi",
            "Ankuva Eczanesi",
            "Ankuva Taksi",
            "Sunstation Ankara Solaryum",
            "Kyma",
            "Savor",
            "Abeküs Ev Yemekleri&Izgara",
            "Piel roja hamburger",
            "Court Cafe",
            "Bardum Nargile Cafe",
            "Mng Kargo-bilkent Þubesi",
            "Bilkent 2 Park Sitesi",
            "Bilkent Barýþ Emlak",
            "Borsem Emlak",
            "Waffle Corner",
            "Park Market",
            "BAÖG Bilkent Nargile Cafe",
            "Adýyaman Çiðköftecisi",
            "33 Park Tantuni",
            "Loco Poco",
            "YÖK DENKLÝK",
            "YOYO",
            "Sakarya Kongre Merkez Ve Balo Salonu",
            "Sanitas Spa & Wellness",
            "Bilkent Üniversitesi Hazýrlýk Okulu",
            "Büfe",
            "Ortadoðu Rulman Sanayi ve Tic. A.Þ",
            "Fen Fakültesi",
            "Eðitim Fakültesi",
            "Baþarý Mobile",
            "Bilkent Üniversitesi Saðlýk Merkezi",
            "Meteksan Savunma A.Þ",
            "UMRAM",
            "Chiffre Cafe & Nargile",
            "BÝLKENT 3 UFUK SÝTESÝ",
            "Garanti Jan.Anýttepe Lojmanlarý Paramatiði",
            "Bilkent Þafak Sitesi",
            "Altýn Köþk Müzesi",
            "Bilkent Üniversitesi Güzel Sanatlar Tasarým Ve Mimarlýk Fakültesi",
            "Hukuk Fakültesi",
            "Meteksan Kitabevi",
            "Bilkent GSF Starbucks",
            "Ýþl. Fakültesi",
            "Ýkst. Ýdari Ve Sosyal Bil. Fakültesi",
            "Bilkent Üniversitesi Uygulamalý Yabancý Diller Yo",
            "Uluslararasý Çocuk Mer",
            "Bilkent Üniversitesi Merkez Kampüs Kütüphanesi",
            "Marmara Restorant",
            "Yapý Kredi Bankasý - Bilkent Þubesi",
            "Bilkent Üniversitesi Rektörlük Binasý",
            "Ömür Eczanesi",
            "Merkez Spor Salonu",
            "Speed Cafe",
            "Fen Fakültesi",
            "Bilka",
            "TOKÝ-bilkent",
            "Halý Saha",
            "Sofa Cafe",
            "Ptt",
            "Mht Elektronik",
            "Tepe Güvenlik Sistemleri",
            "Knauf",
            "Yurtiçi Kargo Bilkent",
            "Ýnfopark Bilgi Teknolojileri",
            "Tepe Betopan A.Þ",
            "Otonom Teknoloji Robotics, Electronics & Software",
            "Cybersoft",
            "Mobiltrust Bilisim Sanayi Ve Ticaret Anonim Sirketi",
            "Tepe Ýnþaat Sanayi A.Þ.",
            "Bilkent Holding",
            "Dengeli Cafe",
            "Signum TTE",
            "High Fun",
            "Samsun pide ve kebap","E building","B building",
            "G building","FF building","FA building","SA building",
            "FC building","L building","V building","EE building",
              "SB building","A building","M building","U building",
            "R building","NA building","NC building","NB building",
             "D building","C building","P building"};

    static PointDouble[] coordinates = new PointDouble[]{
            new PointDouble(39.884286, 32.758559),
            new PointDouble(39.877555, 32.763540),
            new PointDouble(39.883728, 32.756241),
            new PointDouble(39.883674, 32.759585),
            new PointDouble(39.875500, 32.752345),
            new PointDouble(39.869815, 32.745465),
            new PointDouble(39.870290, 32.749630),
            new PointDouble(39.867699, 32.747576),
            new PointDouble(39.865722, 32.764600),
            new PointDouble(39.871488, 39.871488),
            new PointDouble(39.869193, 32.765341),
            new PointDouble(39.869032, 32.755021),
            new PointDouble(39.873042, 32.756932),
            new PointDouble(39.872026, 32.761934),
            new PointDouble(39.870950, 32.764559),
            new PointDouble(39.874620, 32.761783),
            new PointDouble(39.880949, 32.755048),
            new PointDouble(39.875274, 32.763913),
            new PointDouble(39.877163, 32.762611),
            new PointDouble(39.876835, 32.760399),
            new PointDouble(39.879527, 32.762820),
            new PointDouble(39.881486, 32.763590),
            new PointDouble(39.883437, 32.762410),
            new PointDouble(39.883306, 32.761351),
            new PointDouble(39.883635, 32.762282),
            new PointDouble(39.877089, 32.746939),
            new PointDouble(39.874615, 32.747596),
            new PointDouble(39.875584, 32.750025),
            new PointDouble(39.881556, 32.754466),
            new PointDouble(39.882745, 32.756074),
            new PointDouble(39.883818, 32.757961),
            new PointDouble(39.883478, 32.755415),
            new PointDouble(39.883596, 32.755544),
            new PointDouble(39.883759, 32.753987),
            new PointDouble(39.884074, 32.754549),
            new PointDouble(39.883467, 32.752687),
            new PointDouble(39.881556, 32.754466),
            new PointDouble(39.881908, 32.756928),
            new PointDouble(39.883524, 32.758041),
            new PointDouble(39.883543, 32.757746),
            new PointDouble(39.883960, 39.883960),
            new PointDouble(39.884059, 32.758521),
            new PointDouble(39.883902, 32.757806),
            new PointDouble(39.883622, 32.758945),
            new PointDouble(39.883884, 32.759119),
            new PointDouble(39.884005, 32.759732),
            new PointDouble(39.883143, 32.759315),
            new PointDouble(39.845184, 32.921226),
            new PointDouble(39.883642, 32.758238),
            new PointDouble(39.883382, 32.757890),
            new PointDouble(39.883857, 32.757679),
            new PointDouble(39.879857, 32.763577),
            new PointDouble(39.883429, 32.759112),
            new PointDouble(39.884116, 32.759055),
            new PointDouble(39.867136, 32.749911),
            new PointDouble(39.884286, 32.758559),
            new PointDouble(39.883574, 32.759202),
            new PointDouble(39.883580, 32.758400),
            new PointDouble(39.883744, 32.759402),
            new PointDouble(39.883828, 32.759277),
            new PointDouble(39.883836, 32.759192),
            new PointDouble(39.883674, 32.759585),
            new PointDouble(39.883567, 32.759607),
            new PointDouble(39.883622, 32.759785),
            new PointDouble(39.884281, 32.758022),
            new PointDouble(39.884014, 32.757805),
            new PointDouble(39.883581, 32.757192),
            new PointDouble(39.882752, 32.758837),
            new PointDouble(39.884286, 32.758559),
            new PointDouble(39.885219, 32.761188),
            new PointDouble(39.882745, 32.756074),
            new PointDouble(39.882625, 32.756079),
            new PointDouble(39.883171, 32.756762),
            new PointDouble(39.873512, 32.761081),
            new PointDouble(39.883344, 32.756523),
            new PointDouble(39.883662, 32.756018),
            new PointDouble(39.883506, 32.756646),
            new PointDouble(39.883491, 32.755824),
            new PointDouble(39.883566, 32.756117),
            new PointDouble(39.883666, 32.756071),
            new PointDouble(39.871272, 32.752014),
            new PointDouble(39.883691, 32.756515),
            new PointDouble(39.883728, 32.756241),
            new PointDouble(39.883662, 32.756018),
            new PointDouble(39.867716, 32.756675),
            new PointDouble(39.883956, 32.755887),
            new PointDouble(39.884396, 32.756688),
            new PointDouble(39.883341, 32.755777),
            new PointDouble(39.882733, 32.761044),
            new PointDouble(39.882036, 32.760401),
            new PointDouble(39.883674, 32.759585),
            new PointDouble(39.880520, 32.759084),
            new PointDouble(39.880677, 32.759193),
            new PointDouble(39.880912, 32.760050),
            new PointDouble(39.880200, 32.758514),
            new PointDouble(39.881275, 32.758419),
            new PointDouble(39.896591, 32.864928),
            new PointDouble(39.880204, 32.758602),
            new PointDouble(39.881019, 32.758586),
            new PointDouble(39.868370, 32.732072),
            new PointDouble(39.880530, 32.759012),
            new PointDouble(39.873512, 32.761081),
            new PointDouble(39.876835, 32.760399),
            new PointDouble(39.876884, 32.763174),
            new PointDouble(39.877555, 32.763540),
            new PointDouble(39.874942, 32.762740),
            new PointDouble(39.865722, 32.764600),
            new PointDouble(39.884203, 32.756447),
            new PointDouble(39.871272, 32.752014),
            new PointDouble(39.867814, 32.748195),
            new PointDouble(39.874615, 32.747596),
            new PointDouble(39.869361, 32.744481),
            new PointDouble(39.868378, 32.749052),
            new PointDouble(39.872413, 32.743651),
            new PointDouble(39.873295, 32.745849),
            new PointDouble(39.857098, 32.755972),
            new PointDouble(39.854876, 32.758537),
            new PointDouble(39.845111, 32.747014),
            new PointDouble(39.860339, 32.761208),
            new PointDouble(39.861294, 32.764026),
            new PointDouble(39.865899, 32.748904),
            new PointDouble(39.874615, 32.747596),
            new PointDouble(39.866265, 32.748426),
            new PointDouble(39.866392, 32.749157),
            new PointDouble(39.874615, 32.747596),
            new PointDouble(39.867758, 32.749534),
            new PointDouble(39.869429, 32.749637),
            new PointDouble(39.874615, 32.747596),
            new PointDouble(39.870290, 32.749630),
            new PointDouble(39.874615, 32.747596),
            new PointDouble(39.871386, 32.750265),
            new PointDouble(39.871290, 32.749959),
            new PointDouble(39.868223, 32.749291),
            new PointDouble(39.866705, 32.748298),
            new PointDouble(39.868022, 32.737887),
            new PointDouble(39.867814, 32.748195),
            new PointDouble(39.869973, 32.750585),
            new PointDouble(39.884074, 32.754549),
            new PointDouble(39.874615, 32.747596),
            new PointDouble(39.894553, 32.704804),
            new PointDouble(39.881008, 32.754285),
            new PointDouble(39.865916, 32.746885),
            new PointDouble(39.909667, 32.754986),
            new PointDouble(39.869046, 32.745863),
            new PointDouble(39.870303, 32.745990),
            new PointDouble(39.869763, 32.744774),
            new PointDouble(39.869057, 32.744534),
            new PointDouble(39.869518, 32.743774),
            new PointDouble(39.869460, 32.743908),
            new PointDouble(39.869931, 32.743735),
            new PointDouble(39.869550, 32.742922),
            new PointDouble(39.869419, 32.742243),
            new PointDouble(39.871272, 32.752014),
            new PointDouble(39.870255, 32.745866),
            new PointDouble(39.857297, 32.755738),
            new PointDouble(39.856015, 32.755747),
            new PointDouble(39.871161,32.750020),
            new PointDouble(39.868756, 32.748052),
            new PointDouble(39.868698, 32.749613),
            new PointDouble(39.865634, 32.748740),
            new PointDouble(39.866116, 32.749480),
            new PointDouble(39.867639, 32.748321),
            new PointDouble(39.866474, 32.749266),
            new PointDouble(39.869311, 32.749947),
            new PointDouble(39.867019, 32.750053),
            new PointDouble(39.868364, 32.748230),
            new PointDouble(39.867698, 32.749399),
            new PointDouble(39.867396, 32.750215),
            new PointDouble(39.872391, 32.750735),
            new PointDouble(39.874667, 32.761900),
            new PointDouble(39.873253, 32.763016),
            new PointDouble(39.872839, 32.762932),
            new PointDouble(39.873255, 32.762983),
            new PointDouble(39.870560, 32.764838),
            new PointDouble(39.871322, 32.764571),
            new PointDouble(39.869032, 32.755021),
            new PointDouble(39.869032, 32.755021)};

    /**
     * This method extracts data at a particular index in a comma separated list
     * @param str - the data to extract from
     * @param i - the index of extraction
     * @return the extracted string
     */
    public static String extractString( String str, int i)
    {
        String required;
        int index = 0;
        int indexCount = 0;
        boolean exit = false;
        if (i < 0)
            return "Invalid index";
        if (!str.equals(""))
        {
            while (!exit)
            {
                if (str.indexOf( ",", index ) != -1)               //if ',' not found
                {
                    if ( i != indexCount)
                    {
                        indexCount++;
                        index = str.indexOf( ",", index ) + 1;             //find next
                    }
                    else
                    {
                        return str.substring( index, str.indexOf( ",", index ));      //extract text
                    }
                }
                else
                {
                    if ( i == indexCount)
                        return str.substring( index);
                    else
                        return "Invalid index";                   //return error message
                }
            }
        }
        return "Empty string";                  //if no string entered
    }
}

